package components

templ ModalEditCard() {
	<div
		x-data="{
			loading: false,
			editing: false,
			canDelete: false,
			modalTitle: '',
			item: {},
			cardTitle: '',
			cardContent: '',
			hasChanges() {
				return this.cardTitle !== this.item.title || this.cardContent !== this.item.content;
			},
			async save() {
				this.loading = true;
				if (!this.hasChanges()) {
					this.editMode = false;
					return;
				}
				try {
					if (this.item.id) {
						const record = await pb.collection('cards').update(this.item.id, {
							title: this.cardTitle,
							content: this.cardContent,
						});
						$dispatch('items-modified');
					} else {
						const record = await pb.collection('cards').create({
							title: this.cardTitle,
							content: this.cardContent,
							user: pb.authStore.model.id
						});
						$dispatch('items-created');
					}
					this.editing = false;
				} catch (error) {
					console.error(error);
				} finally {
					this.loading = false;
				}
			},
			async deleteCard() {
				this.loading = true;
				try {
					const record = await pb.collection('cards').delete(this.item.id);
					$dispatch('items-modified');
					this.editing = false;
				} catch (error) {
					console.error(error);
				} finally {
					this.loading = false;
				}
			},
			editItem(item) {
				this.editing = true;
				this.canDelete = true;
				this.modalTitle = 'Edit Card';
				this.item = item;
				this.cardTitle = item.title;
				this.cardContent = item.content;
			},
			createItem() {
				this.editing = true;
				this.canDelete = false;
				this.modalTitle = 'Create Card';
				this.item = {
					title: '',
					content: '',
				};
				this.cardTitle = '';
				this.cardContent = '';
			}
		}"
		@item-edited.window="editItem($event.detail)"
		@item-created.window="createItem()"
	>
		<div id="hs-task-created-alert" x-show="editing" x-transition.opacity class="size-full fixed top-0 start-0 z-50 bg-black/25 overflow-x-hidden overflow-y-auto flex justify-center items-center" role="dialog" aria-labelledby="hs-task-created-alert-label">
			<div class="mt-7 opacity-100 duration-500 mt-0 opacity-0 ease-out transition-all sm:max-w-lg sm:w-full m-3 sm:mx-auto">
				<div @click.away="editing = false" class="relative flex flex-col bg-white shadow-lg rounded-xl">
					<div class="absolute top-2 end-2">
						<button @click="editing = false" type="button" class="size-8 inline-flex justify-center items-center gap-x-2 rounded-full border border-transparent bg-gray-100 text-gray-800 hover:bg-gray-200 focus:outline-hidden focus:bg-gray-200 disabled:opacity-50 disabled:pointer-events-none" aria-label="Close" data-hs-overlay="#hs-task-created-alert">
							<span class="sr-only">Close</span>
							<svg class="shrink-0 size-4" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M18 6 6 18"></path><path d="m6 6 12 12"></path></svg>
						</button>
					</div>
					<div class="p-4 sm:p-10 text-center overflow-y-auto">
						<!-- Icon -->
						<span class="mb-4 inline-flex justify-center items-center size-11 rounded-full border-4 border-green-50 bg-green-100 text-green-500">
							<svg class="shrink-0 size-5" xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" viewBox="0 0 24 24">
								<path d="M16.5 6a3 3 0 0 0-3-3H6a3 3 0 0 0-3 3v7.5a3 3 0 0 0 3 3v-6A4.5 4.5 0 0 1 10.5 6h6Z"></path>
								<path d="M18 7.5a3 3 0 0 1 3 3V18a3 3 0 0 1-3 3h-7.5a3 3 0 0 1-3-3v-7.5a3 3 0 0 1 3-3H18Z"></path>
							</svg>
						</span>
						<!-- End Icon -->
						<h3 x-text="modalTitle" id="hs-task-created-alert-label" class="mb-2 text-xl font-bold text-gray-800"></h3>
						<p class="text-gray-500">
							You can can edit a card you have created. Everyone will be able to see the changes you made <a href="/" @click.prevent="loadContent('/')" class="inline-flex items-center gap-x-1.5 text-blue-600 decoration-2 hover:underline focus:outline-hidden focus:underline font-medium">here</a>.
						</p>
						<div class="my-4 sm:my-8 flex flex-col place-items-start">
							<label for="hs-feedback-post-comment-name-1" class="block mb-2 text-sm font-medium">Title</label>
							<input x-model="cardTitle" type="text" class="py-2.5 sm:py-3 px-4 block w-full border border-gray-200 rounded-lg sm:text-sm focus:border focus:border-blue-500 focus:ring-blue-500 disabled:opacity-50 disabled:pointer-events-none" placeholder="Title"/>
						</div>
						<div class="mb-4 sm:mb-8 flex flex-col place-items-start">
							<label class="block mb-2 text-sm font-medium">Content</label>
							<div class="mt-1 w-full">
								<textarea x-model="cardContent" rows="5" class="py-2.5 sm:py-3 px-4 block w-full border border-gray-200 rounded-lg sm:text-sm focus:border-blue-500 focus:ring-blue-500 disabled:opacity-50 disabled:pointer-events-none" placeholder="Card content"></textarea>
							</div>
						</div>
						<div class="mt-6 flex justify-center gap-x-4">
							<button
								@click="save"
								type="button"
								class="
									inline-flex justify-center items-center gap-x-3 
									text-center text-white text-sm font-medium
									bg-gradient-to-tl from-blue-600 to-violet-600
									hover:from-violet-600 hover:to-blue-600
									focus:from-violet-600 focus:to-blue-600
									border border-transparent rounded-md py-3 px-4"
								data-hs-overlay="#hs-task-created-alert"
							>
								Save
							</button>
							<button
								@click="deleteCard"
								type="button"
								x-show="canDelete"
								class="
									inline-flex justify-center items-center gap-x-3 
									text-center text-white text-sm font-medium
									bg-gradient-to-tl from-red-600 to-pink-700
									hover:from-pink-700 hover:to-red-600
									focus:from-pink-700 focus:to-red-600
									border border-transparent rounded-md py-3 px-4"
								data-hs-overlay="#hs-task-created-alert"
							>
								Delete
							</button>
							<button
								@click="editing = false"
								type="button"
								class="py-2 px-3 inline-flex items-center gap-x-2 text-sm font-medium rounded-lg border border-gray-200 bg-white text-gray-800 shadow-2xs hover:bg-gray-50 disabled:opacity-50 disabled:pointer-events-none focus:outline-hidden focus:bg-gray-50"
								data-hs-overlay="#hs-task-created-alert"
							>
								Cancel
							</button>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
}
